// ==========================================================
// ЁЯФ╣ Example 1: Primitive (Stack memory)
// ==========================================================

let x = 100;      // Stack рдордзреНрдпреЗ x -> 100
let y = x;        // y = copy of x (value copy рд╣реЛрддреЗ)

y = 200;          // y рдмрджрд▓рддреЛ рдкрдг x рдмрджрд▓рдд рдирд╛рд╣реА

console.log("Primitive Example:");
console.log("x =", x); // 100
console.log("y =", y); // 200

// ==========================================================
// ЁЯФ╣ Example 2: Non-Primitive (Object - Heap memory)
// ==========================================================

let person1 = { name: "Rahul" };  
// Stack: person1 -> reference (0x123)
// Heap:  0x123 -> { name: "Rahul" }

let person2 = person1;   
// person2 рд╕реБрджреНрдзрд╛ рддреНрдпрд╛рдЪ reference рд▓рд╛ point рдХрд░рддреЛ (0x123)

person2.name = "Amit";  
// Heap рдордзрд▓реНрдпрд╛ actual object рдордзреНрдпреЗ рдмрджрд▓

console.log("\nNon-Primitive (Object) Example:");
console.log("person1.name =", person1.name); // "Amit"
console.log("person2.name =", person2.name); // "Amit"

// ==========================================================
// ЁЯФ╣ Example 3: Array (Heap memory)
// ==========================================================

let arr1 = [1, 2, 3];
// Stack: arr1 -> reference (0x456)
// Heap:  0x456 -> [1, 2, 3]

let arr2 = arr1;
// arr2 -> 0x456 (same reference as arr1)

arr2.push(4);  
// Heap рдордзрд▓реНрдпрд╛ actual array рдордзреНрдпреЗ рдмрджрд▓

console.log("\nArray Example:");
console.log("arr1 =", arr1); // [1, 2, 3, 4]
console.log("arr2 =", arr2); // [1, 2, 3, 4]

// ==========================================================
// ЁЯЯв Summary
// ==========================================================
// 1. Primitive values (Number, String, Boolean, null, undefined, Symbol, BigInt)
//    ЁЯСЙ Stack рдордзреНрдпреЗ directly store рд╣реЛрддрд╛рдд
//    ЁЯСЙ Pass by Value (copy рд╣реЛрддреЗ)
//
// 2. Non-Primitive values (Object, Array, Function)
//    ЁЯСЙ Heap рдордзреНрдпреЗ store рд╣реЛрддрд╛рдд (Stack рдордзреНрдпреЗ рдлрдХреНрдд reference рдареЗрд╡рд▓рд╛ рдЬрд╛рддреЛ)
//    ЁЯСЙ Pass by Reference (рдПрдХрдЪ data share рд╣реЛрддреЛ)
// ==========================================================
